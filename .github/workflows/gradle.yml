# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Koltin CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
           java-version: 11  
        - run: chmod +x gradlew      
        - uses: eskatos/gradle-command-action@v1
          with:
            arguments: shadowJar
        - name: Upload a Release Asset
          uses: actions/upload-release-asset@v1.0.2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: https://uploads.github.com/repos/Meghdut-Mandal/ViveBackend/releases/25838080/assets{?name,label} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
            asset_path: ./build/libs/backend-1.5-all.jar
            asset_name: backend-1.5-all.jar
            asset_content_type: application/zip
        - run : echo ${{ steps.create_release.outputs.upload_url }}
